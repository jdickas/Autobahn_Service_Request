<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_task">stateVALCHANGES^NQstate=111^u_pending_timerVALCHANGES^ORu_on_hold_reasonVALCHANGES^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item display_value="On Hold" endquery="false" field="state" goto="false" newquery="true" operator="=" or="false" value="111"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SC state changes RITM state</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var scStateValue = current.state;
	var ritmSysId = current.request_item;
	if(scStateValue==111){
		var holdreason= current.u_on_hold_reason;
		new global.ServiceRequestUtil().setRITMOnHold(ritmSysId,holdreason);
	}
/*	else if((scStateValue==4) || (scStateValue==7) )
	{
		new global.ServiceRequestUtil().catalogTaskSkippedOrClosedIncomplete(ritmSysId,scStateValue);
	}
/*	else if(scStateValue==7)
	{
		new global.ServiceRequestUtil().setRITMOnClosedSkipped(ritmSysId);
	}
	
	else if(scStateValue==3)
	{
		new global.ServiceRequestUtil().checkCatalogTaskClosed(ritmSysId);

	}
*/
	else if(scStateValue==2)
	{
		new global.ServiceRequestUtil().catalogTaskonHoldChangesWIP(ritmSysId);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>A100409</sys_created_by>
        <sys_created_on>2024-02-28 21:09:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ae2ba60bc3a4c2902c03deee050131f5</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>SC state changes RITM state</sys_name>
        <sys_overrides/>
        <sys_package display_value="Autobahn Service Request" source="d80b6c02c3c04e502c03deee0501316f">d80b6c02c3c04e502c03deee0501316f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Autobahn Service Request">d80b6c02c3c04e502c03deee0501316f</sys_scope>
        <sys_update_name>sys_script_ae2ba60bc3a4c2902c03deee050131f5</sys_update_name>
        <sys_updated_by>J100246</sys_updated_by>
        <sys_updated_on>2024-05-15 06:22:02</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ae2ba60bc3a4c2902c03deee050131f5"/>
</record_update>
