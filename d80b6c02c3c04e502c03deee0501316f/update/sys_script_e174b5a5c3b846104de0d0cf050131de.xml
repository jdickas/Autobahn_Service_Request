<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_req_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_req_item">stateVALCHANGES^ORapprovalVALCHANGES^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="approval" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>TEST</p>]]></message>
        <name>Requested Item - Stage Flow Trigger</name>
        <order>1</order>
        <priority>1</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var inputs = {};
    inputs['table_name'] = 'Table Name';
	//inputs['table_name'] = 'sc_req_item';
    inputs['request_item'] = current;


    //sn_fd.FlowAPI.startFlow('global.autobahn_request__stage__status', inputs);
    sn_fd.FlowAPI.startFlow('autobahn_request__stage__status', inputs);


    //sn_fd.FlowAPI.executeFlow('global.autobahn_request__stage__status'. inputs);
    sn_fd.FlowAPI.executeFlow('autobahn_request__stage__status', inputs);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>A100410</sys_created_by>
        <sys_created_on>2024-03-07 11:34:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e174b5a5c3b846104de0d0cf050131de</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name>Requested Item - Stage Flow Trigger</sys_name>
        <sys_overrides/>
        <sys_package display_value="Autobahn Service Request" source="d80b6c02c3c04e502c03deee0501316f">d80b6c02c3c04e502c03deee0501316f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Autobahn Service Request">d80b6c02c3c04e502c03deee0501316f</sys_scope>
        <sys_update_name>sys_script_e174b5a5c3b846104de0d0cf050131de</sys_update_name>
        <sys_updated_by>J100246</sys_updated_by>
        <sys_updated_on>2024-08-06 11:01:46</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e174b5a5c3b846104de0d0cf050131de"/>
</record_update>
